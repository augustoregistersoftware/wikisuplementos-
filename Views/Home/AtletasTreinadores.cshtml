@model IEnumerable<wikisuplementos.Models.TreinadorModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WikiSuplementos - Treinadores</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            color: #333;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 2em 0;
        }

        header {
            background: #333;
            color: white;
            padding: 1em 0;
            text-align: center;
        }

        header h1 {
            margin: 0;
        }

        nav ul {
            list-style: none;
            padding: 0;
            display: flex;
            justify-content: center;
        }

        nav ul li {
            margin: 0 1em;
        }

        nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: bold;
        }

        .actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1em;
        }

        .actions a, .actions select {
            padding: 0.5em 1em;
            border-radius: 5px;
            border: none;
            cursor: pointer;
        }

        .actions a {
            background-color: #28a745;
            color: white;
            font-size: 1em;
        }

        .actions select {
            background-color: #fff;
            border: 1px solid #ccc;
            font-size: 1em;
        }

        .supplements {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .supplement-card {
            background: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 30%;
            margin-bottom: 2em;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s;
        }

        .supplement-card:hover {
            transform: scale(1.05);
        }

        .supplement-card img {
            width: 100%;
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
        }

        .supplement-card .card-content {
            padding: 1em;
        }

        .supplement-card h3 {
            margin-top: 0;
            font-size: 1.5em;
        }

        .supplement-card p {
            font-size: 1em;
            color: #555;
        }

        footer {
            background: #333;
            color: white;
            text-align: center;
            padding: 1em 0;
        }

        /* Modal Styles */
        .modal {
            display: none; 
            position: fixed; 
            z-index: 1; 
            padding-top: 60px; 
            left: 0;
            top: 0;
            width: 100%; 
            height: 100%; 
            overflow: auto; 
            background-color: rgb(0,0,0); 
            background-color: rgba(0,0,0,0.4); 
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto; 
            padding: 20px;
            border: 1px solid #888;
            width: 80%; 
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .modal input, .modal textarea {
            width: 100%;
            padding: 0.5em;
            margin-bottom: 1em;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

            .btn {
        padding: 0.5em 1em;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        text-align: center;
        display: inline-block;
        font-size: 1em;
        margin: 0.2em 0;
    }

    .btn-sm {
        padding: 0.25em 0.5em;
        font-size: 0.8em;
    }

    .btn-details {
        background-color: #007bff;
        color: white;
    }

    .btn-details:hover {
        background-color: #0056b3;
    }

    </style>
</head>
<body>

    <main>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <div class="container">
            <h2>Informações sobre Atletas e Treinadores</h2>
            <div class="actions">
                <a asp-area="" asp-controller="Home" asp-action="CadastroAtletasTreinadores">Adicionar Treinador</a>
                <a asp-area="" asp-controller="Home" asp-action="CadastroAtletas">Adicionar Atleta</a>
            </div>
            <div class="supplements">
                @if (Model != null && Model.Any())
                {
                    foreach (var treinador in Model)
                    {
                        <div class="supplement-card @(treinador.Uf?.ToLower() ?? "unknown")" id="treinador-@treinador.Id">
                        <img src="@treinador.LinkFoto" alt="@treinador.Nome ?? "Sem Nome"">
                        <div class="card-content">
                            <h3>@(treinador.Nome ?? "Sem Nome")</h3>
                            <p>@(treinador.Descricao ?? "Sem Descrição")</p>
                            <p>Atletas:</p>
                            <ul>
                                @if (treinador.Atletas != null && treinador.Atletas.Any())
                                {
                                    foreach (var atleta in treinador.Atletas)
                                    {
                                        <li>@atleta.Nome <button class="btn btn-sm btn-details" onclick="getAtletaDetails(@atleta.Id)">Detalhes</button></li>
                                    }
                                }
                                else
                                {
                                    <li>Nenhum atleta encontrado.</li>
                                }
                            </ul>
                            <a title="Editar Treinador" href="javascript:goEdit(@treinador.Id, '@treinador.Nome', '@treinador.Descricao', '@treinador.LinkFoto', '@treinador.Uf')" class="btn btn-info btn-sm btn-warning"><i class="fa-solid fa-pencil"></i></a>
                            <a title="Excluir treinador" href="javascript:deleteTreinador(@treinador.Id)" class="btn btn-info btn-sm btn-danger"><i class="fa-solid fa-trash"></i></a>
                        </div>
                    </div>

                    }
                }
                else
                {
                    <p>Nenhum treinador encontrado.</p>
                }
            </div>
        </div>
    </main>
    <footer>
        <div class="container">
            <p>&copy; 2024 WikiSuplementos. Todos os direitos reservados.</p>
        </div>
    </footer>
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2>Editar Treinador</h2>
            <input type="hidden" id="editId">
            <label for="editNome">Nome</label>
            <input type="text" id="editNome">
            <label for="editDescricao">Descrição</label>
            <textarea id="editDescricao"></textarea>
            <label for="editLinkFoto">Link da Foto</label>
            <input type="text" id="editLinkFoto">
            <label for="editUf">UF</label>
            <input type="text" id="editUf">
            <button onclick="saveEdit()">Salvar</button>
        </div>
    </div>
    <script>
        function deleteTreinador(id) {
            if (confirm("Tem certeza que deseja excluir este Treinador?")) {
                console.log(`Iniciando a exclusão do Treinador com ID: ${id}`);
                fetch(`/Home/DeleteTreinadorAtleta/${id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    console.log('Resposta recebida do servidor:', response);
                    if (response.ok) {
                        document.getElementById(`treinador-${id}`).remove();
                        Swal.fire({
                            title: "Sucesso!",
                            text: "Treinador excluído com sucesso.",
                            icon: "success"
                        });
                    } else {
                        return response.text().then(text => {
                            console.log('Erro ao excluir o Treinador:', text);
                            Swal.fire({
                                title: "Erro!",
                                text: text || "Não foi possível excluir o Treinador.",
                                icon: "error"
                            });
                        });
                    }
                })
                .catch(error => {
                    console.error('Erro na solicitação de exclusão:', error);
                    Swal.fire({
                        title: "Erro!",
                        text: "Ocorreu um erro ao excluir o Treinador.",
                        icon: "error"
                    });
                });
            }
        }

        function goEdit(id, nome, descricao, linkFoto, uf) {
            document.getElementById('editId').value = id;
            document.getElementById('editNome').value = nome;
            document.getElementById('editDescricao').value = descricao;
            document.getElementById('editLinkFoto').value = linkFoto;
            document.getElementById('editUf').value = uf;
            document.getElementById('editModal').style.display = "block";
        }

        function closeModal() {
            document.getElementById('editModal').style.display = "none";
        }

        window.onclick = function(event) {
            if (event.target == document.getElementById('editModal')) {
                document.getElementById('editModal').style.display = "none";
            }
        }

        function saveEdit() {
            var id = document.getElementById('editId').value;
            var nome = document.getElementById('editNome').value;
            var descricao = document.getElementById('editDescricao').value;
            var linkFoto = document.getElementById('editLinkFoto').value;
            var uf = document.getElementById('editUf').value;

            var updatedTreinador = {
                id: id,
                nome: nome,
                descricao: descricao,
                linkFoto: linkFoto,
                uf: uf
            };

            fetch(`/Home/EditTreinador/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedTreinador)
            })
            .then(response => {
                if (response.ok) {
                    // Atualizar os dados na interface sem recarregar a página, se necessário
                    Swal.fire({
                        title: "Sucesso!",
                        text: "Treinador editado com sucesso.",
                        icon: "success"
                    });
                    closeModal();
                    // Atualiza a UI com os novos dados
                    document.querySelector(`#treinador-${id} h3`).innerText = nome;
                    document.querySelector(`#treinador-${id} p`).innerText = descricao;
                    document.querySelector(`#treinador-${id} img`).src = linkFoto;
                } else {
                    response.text().then(text => {
                        Swal.fire({
                            title: "Erro!",
                            text: text || "Não foi possível editar o treinador.",
                            icon: "error"
                        });
                    });
                }
            })
            .catch(error => {
                console.error('Erro na solicitação de edição:', error);
                Swal.fire({
                    title: "Erro!",
                    text: "Ocorreu um erro ao editar o treinador.",
                    icon: "error"
                });
            });
        }

        function getAtletaDetails(atletaId) {
            fetch(`/Home/GetAtletaDetails/${atletaId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                console.log('Atleta Details:', data);

                Swal.fire({
                    title: data.nome,
                    text: `Descrição: ${data.descricao}\nUF: ${data.uf}`,
                    imageUrl: `${data.linkfoto}`,
                    imageWidth: 400,
                    imageHeight: 200,
                    imageAlt: "Custom image"
                    });
            })
            .catch(error => {
                console.error('Erro ao buscar detalhes do atleta:', error);
                Swal.fire({
                    title: "Erro!",
                    text: "Ocorreu um erro ao buscar os detalhes do atleta.",
                    icon: "error"
                });
            });
        }

        document.getElementById('categoryFilter').addEventListener('change', function() {
            var selectedCategory = this.value;
            var cards = document.querySelectorAll('.supplement-card');

            cards.forEach(function(card) {
                if (selectedCategory === "" || card.classList.contains(selectedCategory)) {
                    card.style.display = "block";
                } else {
                    card.style.display = "none";
                }
            });
        });
    </script>
</body>
</html>